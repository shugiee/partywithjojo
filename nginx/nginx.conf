server {
    server_name partywithjojo.com www.partywithjojo.com;
    gzip             on;

    root /home/jay/partywithjojo/public;
    index home.html;

    location / {
        try_files $uri $uri/ =404;
    }
    
    # Per ChatGPT - don't allow access to hidden files
    location ~ /\. {
        deny all;
    }

    location /api {
        proxy_pass http://localhost:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /login {
        proxy_pass http://localhost:3000/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Protect API endpoints by checking the cookie
    location /rsvp {
        if ($http_cookie !~* "rsvp_auth=yes") {
            return 401;
        }
        proxy_pass http://localhost:3000/rsvp;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.partywithjojo.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.partywithjojo.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.partywithjojo.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = partywithjojo.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen       80;
    server_name partywithjojo.com www.partywithjojo.com;
    return 404; # managed by Certbot
}
