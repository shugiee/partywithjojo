server {
    server_name partywithjojo.com www.partywithjojo.com;
    gzip             on;

    root /home/jay/partywithjojo/public;
    index entry.html;

    # Per ChatGPT - don't allow access to hidden files
    location ~ /\. {
        deny all;
    }

    # Allow access to entry.html and files it needs without a cookie check
    location ~ ^/(entry\.html|styles\.css|miata_horizontal\.webp|favicon\.ico)$ {
        try_files $uri = 404;
    }

    location /fonts {
        try_files $uri = 404;
    }

    location / {
        auth_request /auth;
        auth_request_set $auth_cookie $upstream_http_x_set_cookie;

        # If we are setting a new Spotify token, it's forwarded from Express as a header
        add_header Set-Cookie $auth_cookie;

        # Handle failed authentication by forwarding user to login screen
        error_page 401 /entry.html;

        try_files $uri $uri.html $uri/ /home.html;
    }

    location /auth {
        internal; # Only let internal requests hit this endpoint
        proxy_pass http://localhost:3000/validate-token;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
    }
    
    location /login {
        proxy_pass http://localhost:3000/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /rsvp_get_user {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;

        proxy_pass http://localhost:3000/user;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /rsvp_submit {
        auth_request /auth;
        auth_request_set $auth_status $upstream_status;

        proxy_pass http://localhost:3000/rsvp_submit;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /rsvps {
        internal;
        proxy_pass http://localhost:3000/rsvps;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.partywithjojo.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.partywithjojo.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.partywithjojo.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = partywithjojo.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen       80;
    server_name partywithjojo.com www.partywithjojo.com;
    return 404; # managed by Certbot
}
